generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Meal {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
}

enum Measure {
  PIECE
  GRAM
  KILOGRAM
  LITER
  MILLILITER
  TEASPOON
  TABLESPOON
  CUP
  PINCH
}

model Categories {
  categoryId Int                   @id @default(autoincrement())
  code       String
  title      String
  recipes    CategoriesInRecipes[]
  recipeId   Int?
}

model CategoriesInRecipes {
  categoryId Int
  recipeId   Int
  category   Categories @relation(fields: [categoryId], references: [categoryId], onDelete: NoAction, onUpdate: NoAction)
  recipe     Recipes    @relation(fields: [recipeId], references: [recipeId], onDelete: NoAction, onUpdate: NoAction)

  @@unique([categoryId, recipeId], map: "category_id_recipe_id_unique")
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Ingredients {
  ingredientId  Int                   @id @default(autoincrement())
  title         String                @db.VarChar(255)
  measure       Measure
  calories      Float
  fat           Float
  protein       Float
  carbohydrates Float
  recipes       IngredientInRecipes[]
}

model IngredientInRecipes {
  ingredientId Int
  recipeId     Int
  amount       Float
  ingredient   Ingredients @relation(fields: [ingredientId], references: [ingredientId], onDelete: NoAction, onUpdate: NoAction)
  recipe       Recipes     @relation(fields: [recipeId], references: [recipeId], onDelete: NoAction, onUpdate: NoAction)

  @@unique([ingredientId, recipeId], map: "ingredient_id_recipe_id_unique")
}

model Recipes {
  recipeId    Int                   @id @default(autoincrement())
  title       String                @db.VarChar(255)
  cookingTime Float                 @default(20)
  difficulty  Difficulty            @default(EASY)
  portion     Float                 @default(1.0)
  image       String?
  meal        Meal[]
  categories  CategoriesInRecipes[]
  ingredients IngredientInRecipes[]
}
